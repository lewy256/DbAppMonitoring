<UserControl x:Class="MonitoringApp.Views.SqlInfoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MonitoringApp.Views" 
             xmlns:viewModels="clr-namespace:MonitoringApp.ViewModels"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="1050">
    <UserControl.DataContext>
        <viewModels:SqlInfoViewModel/>
    </UserControl.DataContext>

    <Grid Background="WhiteSmoke">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="1*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" >
                <TextBlock Text="Query details" VerticalAlignment="Center" FontWeight="Bold" FontSize="15" Foreground="#3F4C5D"/>
                <TextBox Width="120" VerticalAlignment="Center" Foreground="#3F4C5D"  Text="{Binding SqlidBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="sql id"  FontSize="15"/>
            </Grid>
            <Grid Grid.Column="1" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PopupBox PlacementMode="BottomAndAlignRightEdges" StaysOpen="True" Margin="10">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Kind="CalendarRange" Foreground="DeepSkyBlue" />
                        </materialDesign:PopupBox.ToggleContent>
                        <StackPanel Width="400">
                            <Border  CornerRadius="5" Background="White" Margin="10">
                                <Grid>
                                    <StackPanel Margin="50,10,50,10">
                                        <TextBlock Text="Okres wyświetlania" HorizontalAlignment="Center"></TextBlock>
                                        <DockPanel>
                                            <TextBlock Text="First" Margin="10"/>
                                            <TextBox Text = "{Binding Path=beginId, Source={x:Static Application.Current}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DockPanel>
                                        <DockPanel>
                                            <TextBlock Text="Last" Margin="10"/>
                                            <TextBox Text = "{Binding Path=endId, Source={x:Static Application.Current}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DockPanel>
                                        <DockPanel/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </materialDesign:PopupBox>
                    <Button Width="50" Command="{Binding RefreshCommand}"  Background="Transparent" BorderThickness="0">
                        <materialDesign:PackIcon Kind="Refresh" Foreground="DeepSkyBlue"  />
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" CornerRadius="5" Background="White"  Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="8*"/>

                    </Grid.RowDefinitions>
                   
                    <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="Activity By Waits"></TextBlock>
                    
                    <Grid Grid.Row="1">
                        <lvc:PieChart   Series="{Binding SeriesCollection}" LegendLocation="Right" InnerRadius="0" Margin="5"/>
                    </Grid>

                </Grid>
            </Border>

            <Border Grid.Column="1"  CornerRadius="5" Background="White" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>

                    <DataGrid Foreground="Black" Grid.Row="1" Background="White" Margin="10" IsReadOnly="True" AutoGenerateColumns="False"  ItemsSource="{Binding ExecStatsValues}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Per"  Binding="{Binding Per}"/>
                            <DataGridTextColumn Header="Elapsed time (ms)" Binding="{Binding ElapsedTime}"/>
                            <DataGridTextColumn Header="Cpu time (ms)" Binding="{Binding CpuTime}"/>
                            <DataGridTextColumn Header="Executions" Binding="{Binding Executions}"/>
                            <DataGridTextColumn Header="Buffer gets" Binding="{Binding BufferGets}"/>
                            <DataGridTextColumn Header="Disk reads" Binding="{Binding DiskReads}"/>
                            <DataGridTextColumn Header="Direct writes" Binding="{Binding DirectWrites}"/>
                            <DataGridTextColumn Header="Rows" Binding="{Binding Rows}"/>
                            <DataGridTextColumn Header="Fetches" Binding="{Binding Fetches}"/> 
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="Execution statistics"></TextBlock>

                </Grid>
            </Border>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" CornerRadius="5" Background="White" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>

                    <DataGrid Foreground="Black" Grid.Row="1" Background="White" Margin="10" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding OtherStatsValues}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Total Parses"  Binding="{Binding TotalParse}"/>
                            <DataGridTextColumn Header="Loads / Hard Parsese" Binding="{Binding LoadsHardParses}"/>
                            <DataGridTextColumn Header="Invalidations" Binding="{Binding Invalidations}"/>
                            <DataGridTextColumn Header="Serializable Aborts" Binding="{Binding SerializableAborts}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBlock Grid.Row="0"  HorizontalAlignment="Center" Text="Other Statistics"></TextBlock>
                </Grid>
            </Border>

            <Border Grid.Column="1"  CornerRadius="5" Background="White" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <lvc:CartesianChart LegendLocation="None">
                            <lvc:CartesianChart.Series>
                                <lvc:RowSeries Values="{Binding BreakdownStats}"/>
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis Labels="{Binding BreakdownLabels}"/>
                            </lvc:CartesianChart.AxisY>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Title="Time (ms)"/>
                            </lvc:CartesianChart.AxisX>
                        </lvc:CartesianChart>
                    </Grid>
                    <TextBlock Grid.Row="0" Grid.Column="0"   HorizontalAlignment="Center" Text="Elapsed Time Breakdown"></TextBlock>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
