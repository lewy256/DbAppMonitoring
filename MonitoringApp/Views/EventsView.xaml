<UserControl x:Class="MonitoringApp.Views.EventsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:viewModels="clr-namespace:MonitoringApp.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="1050">
    <UserControl.DataContext>
        <viewModels:EventsViewModel/>
    </UserControl.DataContext>

    <Grid Background="WhiteSmoke">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" >
                <TextBlock Text="Foreground events" VerticalAlignment="Center" Foreground="#3F4C5D" FontSize="15" FontWeight="Bold"/>
            </Grid>
            <Grid Grid.Column="1" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PopupBox PlacementMode="BottomAndAlignRightEdges" StaysOpen="True" Margin="10">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Kind="CalendarRange" Foreground="DeepSkyBlue" />
                        </materialDesign:PopupBox.ToggleContent>
                        <StackPanel Width="400">
                            <Border  CornerRadius="5" Background="White" Margin="10">
                                <Grid>
                                    <StackPanel Margin="50,10,50,10">
                                        <TextBlock Text="Okres wyświetlania" HorizontalAlignment="Center"></TextBlock>
                                        <DockPanel>
                                            <TextBlock Text="First" Margin="10"/>
                                            <TextBox Text = "{Binding Path=beginId, Source={x:Static Application.Current}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DockPanel>
                                        <DockPanel>
                                            <TextBlock Text="Last" Margin="10"/>
                                            <TextBox Text = "{Binding Path=endId, Source={x:Static Application.Current}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DockPanel>
                                        <DockPanel/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </materialDesign:PopupBox>
                    <Button Width="50" Command="{Binding RefreshCommand}"  Background="Transparent" BorderThickness="0">
                        <materialDesign:PackIcon Kind="Refresh" Foreground="DeepSkyBlue"  />
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>



        <Grid Grid.Column="1" Grid.Row="1">

            <Border   CornerRadius="5" Background="White" Margin="10">
                <Grid>
                    <Grid.Resources>
                        <Style x:Key="CleanSeparator" TargetType="lvc:Separator">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                        </Style>
                    </Grid.Resources>
                    <lvc:CartesianChart >
                        <lvc:CartesianChart.Series>
                            <lvc:ColumnSeries ScalesYAt="0" Fill="DarkOrange"  Values="{Binding EventFg}"/>
                            <lvc:LineSeries ScalesYAt="1"  Fill="Transparent" Values="{Binding AvgEventFg}" />
                        </lvc:CartesianChart.Series>
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Labels="{Binding LabelsFgEvent}"></lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Foreground="DarkOrange" Title="Time Waited (s)"/>
                            <lvc:Axis Foreground="IndianRed" MinValue="0" Title="AVG" Position="RightTop">
                                <lvc:Axis.Separator>
                                    <lvc:Separator Style="{StaticResource CleanSeparator}"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <TextBlock Text="Background events" VerticalAlignment="Center" Foreground="#3F4C5D" FontSize="15" FontWeight="Bold"/>
            </Grid>
            <Border Grid.Row="1"  CornerRadius="5" Background="White" Margin="10">
                <Grid>
                    <Grid.Resources>
                        <Style x:Key="CleanSeparator" TargetType="lvc:Separator">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                        </Style>
                    </Grid.Resources>
                    <lvc:CartesianChart >
                        <lvc:CartesianChart.Series>
                            <lvc:ColumnSeries ScalesYAt="0" Fill="DarkBlue"  Values="{Binding EventBg}"/>
                            <lvc:LineSeries ScalesYAt="1"  Fill="Transparent" Values="{Binding AvgEventBg}" />
                        </lvc:CartesianChart.Series>
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Labels="{Binding LabelsBgEvent}"></lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Foreground="DarkBlue" Title="Time Waited (s)"/>
                            <lvc:Axis Foreground="IndianRed"  Title="AVG" MinValue="0" Position="RightTop">
                                <lvc:Axis.Separator>
                                    <lvc:Separator Style="{StaticResource CleanSeparator}"></lvc:Separator>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                    </lvc:CartesianChart>
                </Grid>
            </Border>
        </Grid>


        <Grid Grid.Column="1" Grid.Row="3" Background="WhiteSmoke">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <TextBlock Text="Wait classes" VerticalAlignment="Center" Foreground="#3F4C5D" FontSize="15" FontWeight="Bold"/>
            </Grid>
            <UniformGrid Grid.Row="1" Columns="1" >
                <Border  CornerRadius="5" Background="White" Margin="10">
                    <Grid>
                        <lvc:CartesianChart Grid.Row="0"  LegendLocation="Bottom">
                            <lvc:CartesianChart.Series>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Application" LineSmoothness="0"  Values="{Binding Application}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Configuration" LineSmoothness="0"   Values="{Binding Configuration}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="User I/O" LineSmoothness="0"  Values="{Binding UserIO}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="System I/0" LineSmoothness="0"  Values="{Binding SystemIO}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Scheduler" LineSmoothness="0" Values="{Binding Scheduler}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Administrative" LineSmoothness="0"  Values="{Binding Administrative}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Network" LineSmoothness="0"  Values="{Binding Network}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Concurrency" LineSmoothness="0"  Values="{Binding Concurrency}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Commit" LineSmoothness="0"  Values="{Binding Commit}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="Other" LineSmoothness="0"  Values="{Binding Other}"/>
                                <lvc:StackedAreaSeries StackMode="Percentage" Title="CPU" LineSmoothness="0"  Values="{Binding CPU}"/>
                            </lvc:CartesianChart.Series>
                            <lvc:CartesianChart.AxisX>
                                <lvc:Axis Labels="{Binding LabelsClassEvent}"></lvc:Axis>
                            </lvc:CartesianChart.AxisX>
                            <lvc:CartesianChart.AxisY>
                                <lvc:Axis  LabelFormatter="{Binding Formatter}"></lvc:Axis>
                            </lvc:CartesianChart.AxisY>
                        </lvc:CartesianChart>


                    </Grid>
                </Border>
            </UniformGrid>
        </Grid>
    </Grid>
</UserControl>
