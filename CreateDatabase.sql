--------------------------------------------
--tabels
---------------------------------------------
DROP TABLE ROLLBACK_PARMS;
DROP TABLE LATCH_PARMS;
DROP TABLE ROW_CACHE_PARMS;
DROP TABLE LIBRARY_CACHE_PARMS;
DROP TABLE SYSSTAT_PARMS;
DROP TABLE SESS_PARMS;
DROP TABLE SYS_PARMS;
DROP TABLE TIME_MODEL_PARMS;
DROP TABLE IO_PARMS;
DROP TABLE SQL_INFO_PARMS;
DROP TABLE WAIT_CLASS_PARMS;
DROP TABLE SYSTEM_EVENT_FG_PARMS;
DROP TABLE SYSTEM_EVENT_BG_PARMS;
DROP TABLE SNAPSHOT_PARMS;
DROP TABLE INSTANCE_PARMS;


CREATE TABLE INSTANCE_PARMS(	
    INST_ID NUMBER(18) NOT NULL,
	STARTUP_TIME TIMESTAMP NOT NULL, 
	DB_VERSION VARCHAR2(20) NOT NULL, 
	INSTANCE_NAME VARCHAR2(20) NOT NULL, 
	HOST_NAME VARCHAR2(64) NOT NULL, 
	PLATFORM_NAME VARCHAR2(64) NOT NULL,
    CONSTRAINT INSTANCE_PARMS_PK PRIMARY KEY (INST_ID,STARTUP_TIME)
);


CREATE TABLE SNAPSHOT_PARMS(  
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
	SNAP_TIME TIMESTAMP NOT NULL ,
    STARTUP_TIME TIMESTAMP NOT NULL, 
	SESSION_ID NUMBER(18) NOT NULL, 
	SERIAL# NUMBER(18) NOT NULL,
    CONSTRAINT SNAPSHOT_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID),
    CONSTRAINT SNAPSHOT_PARMS_FK FOREIGN KEY (INST_ID,STARTUP_TIME) REFERENCES INSTANCE_PARMS(INST_ID,STARTUP_TIME) ON DELETE CASCADE ENABLE
);



CREATE TABLE SYSTEM_EVENT_BG_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    EVENT VARCHAR2(60) NOT NULL,
    TOTAL_WAITS NUMBER(18) NOT NULL,
    TIME_WAITED NUMBER(18) NOT NULL,
    CONSTRAINT SYSTEM_EVENT_BG_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,EVENT),
    CONSTRAINT SYSTEM_EVENT_BG_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE SYSTEM_EVENT_FG_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    EVENT VARCHAR2(60) NOT NULL,
    TOTAL_WAITS_FG NUMBER(18) NOT NULL,
    TIME_WAITED_FG NUMBER(18) NOT NULL,
    CONSTRAINT SYSTEM_EVENT_FG_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,EVENT),
    CONSTRAINT SYSTEM_EVENT_FG_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE WAIT_CLASS_PARMS(
  SNAP_ID NUMBER(18) NOT NULL, 
  INST_ID NUMBER(18) NOT NULL,
  WAIT_CLASS VARCHAR2(30) NOT NULL,
  TIME_WAITED NUMBER(18) NOT NULL,
  CONSTRAINT WAIT_CLASS_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,WAIT_CLASS),
  CONSTRAINT WAIT_CLASS_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE SQL_INFO_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    SQL_ID VARCHAR2(20) NOT NULL,
    PARSE_CALLS NUMBER(18) NOT NULL,
    LOADS NUMBER(18) NOT NULL,
    INVALIDATIONS NUMBER(18) NOT NULL,
    ELAPSED_TIME NUMBER(18) NOT NULL,
    CPU_TIME NUMBER(18) NOT NULL,
    EXECUTIONS NUMBER(18) NOT NULL,
    APPLICATION_WAIT_TIME NUMBER(18) NOT NULL,
    CONCURRENCY_WAIT_TIME NUMBER(18) NOT NULL,
    USER_IO_WAIT_TIME NUMBER(18) NOT NULL,
    PLSQL_EXEC_TIME NUMBER(18) NOT NULL,
    JAVA_EXEC_TIME NUMBER(18) NOT NULL,
    BUFFER_GETS NUMBER(18) NOT NULL,
    DISK_READS NUMBER(18) NOT NULL,
    DIRECT_WRITES NUMBER(18) NOT NULL,
    ROWS_PROCESSED NUMBER(18) NOT NULL,
    FETCHES NUMBER(18) NOT NULL,
    SERIALIZABLE_ABORTS NUMBER(18) NOT NULL,
    CONSTRAINT SQL_INFO_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,SQL_ID),
    CONSTRAINT SQL_INFO_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE IO_PARMS( 
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
	FILE_NAME VARCHAR2(60) NOT NULL, 
	BLOCK_READS NUMBER(18) NOT NULL, 
	BLOCK_WRITES NUMBER(18) NOT NULL, 
    TOTAL_IO NUMBER(18)NOT NULL,
	WRITE_TIME NUMBER(18) NOT NULL, 
	READ_TIME NUMBER(18) NOT NULL,
    CONSTRAINT IO_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,FILE_NAME),
    CONSTRAINT IO_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE TIME_MODEL_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    STAT_NAME VARCHAR2(64) NOT NULL,
    VAL NUMBER(18) NOT NULL,
    CONSTRAINT TIME_MODEL_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,STAT_NAME),
    CONSTRAINT TIME_MODEL_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE SYS_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    STAT_NAME VARCHAR2(8) NOT NULL,
    VAL NUMBER(18) NOT NULL,
    CONSTRAINT SYS_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,STAT_NAME),
    CONSTRAINT SYS_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE SESS_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    SID_NUM NUMBER(18) NOT NULL,
    VAL NUMBER(18) NOT NULL,
    USERNAME VARCHAR2(32) NULL,
    PROGRAM_NAME VARCHAR(32) NULL,
    CONSTRAINT SESS_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,SID_NUM),
    CONSTRAINT SESS_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE LIBRARY_CACHE_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    PINS NUMBER(18) NOT NULL,
    RELOADS NUMBER(18) NOT NULL,
    CONSTRAINT LIBRARY_CASHE_PK PRIMARY KEY (SNAP_ID,INST_ID),
    CONSTRAINT LIBRARY_CASHE_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE ROW_CACHE_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    GETS NUMBER(18) NOT NULL,
    GETMISSES NUMBER(18) NOT NULL,
    CONSTRAINT ROW_CACHE_PK PRIMARY KEY (SNAP_ID,INST_ID),
    CONSTRAINT ROW_CACHE_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE SYSSTAT_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    STAT_NAME VARCHAR(32) NOT NULL,
    VAL NUMBER(18) NOT NULL,
    CONSTRAINT SYSSTAT_PARMS_PK PRIMARY KEY (SNAP_ID,INST_ID,STAT_NAME),
    CONSTRAINT SYSSTAT_PARMS_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE LATCH_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    GETS NUMBER(18) NOT NULL,
    MISSES NUMBER(18) NOT NULL,
    CONSTRAINT LATCH_PK PRIMARY KEY (SNAP_ID,INST_ID),
    CONSTRAINT LATCH_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


CREATE TABLE ROLLBACK_PARMS(
    SNAP_ID NUMBER(18) NOT NULL, 
    INST_ID NUMBER(18) NOT NULL,
    WAITS NUMBER(18) NOT NULL,
    GETS NUMBER(18) NOT NULL,
    CONSTRAINT ROLLBACK_PK PRIMARY KEY (SNAP_ID,INST_ID),
    CONSTRAINT ROLLBACK_FK FOREIGN KEY (SNAP_ID,INST_ID) REFERENCES SNAPSHOT_PARMS (SNAP_ID,INST_ID) ON DELETE CASCADE ENABLE
);


---------------------------------------------------------------------------
--triggers
----------------------------------------------------------------------

INSERT INTO INSTANCE_PARMS(INST_ID, STARTUP_TIME,DB_VERSION,INSTANCE_NAME,HOST_NAME,PLATFORM_NAME)
SELECT INSTANCE_PARMS_SEQ.NEXTVAL,SYSTIMESTAMP,a.VERSION, a.INSTANCE_NAME,a.HOST_NAME,b.PLATFORM_NAME  
FROM V$INSTANCE a, V$DATABASE b;


CREATE OR REPLACE TRIGGER ON_OPEN_TRG
AFTER STARTUP ON DATABASE
BEGIN
INSERT INTO INSTANCE_PARMS(INST_ID, STARTUP_TIME,DB_VERSION,INSTANCE_NAME,HOST_NAME,PLATFORM_NAME)
SELECT INSTANCE_PARMS_SEQ.NEXTVAL,SYSTIMESTAMP,a.VERSION, a.INSTANCE_NAME,a.HOST_NAME,b.PLATFORM_NAME  
FROM V$INSTANCE a, V$DATABASE b;
END;
/


--------------------------------------
--sequences
-----------------------------------
DROP SEQUENCE SNAPSHOT_PARMS_SEQ;
DROP SEQUENCE INSTANCE_PARMS_SEQ;

CREATE SEQUENCE SNAPSHOT_PARMS_SEQ;
CREATE SEQUENCE INSTANCE_PARMS_SEQ;


---------------------------------------
--procedures
--------------------------------------

CREATE OR REPLACE PROCEDURE INSERT_PRC AS
l_SNAP_ID PLS_INTEGER;
l_INST_ID PLS_INTEGER;
BEGIN

SELECT SNAPSHOT_PARMS_SEQ.NEXTVAL
INTO l_SNAP_ID
FROM DUAL;

SELECT MAX(INST_ID)
INTO l_INST_ID
FROM INSTANCE_PARMS;

INSERT INTO SNAPSHOT_PARMS(SNAP_ID, INST_ID,SNAP_TIME,STARTUP_TIME,SESSION_ID,SERIAL#) 
SELECT l_SNAP_ID,l_INST_ID,systimestamp,(SELECT MAX(STARTUP_TIME) FROM INSTANCE_PARMS),sid,serial# from v$session
where audsid = SYS_CONTEXT('USERENV','SESSIONID');


INSERT INTO IO_PARMS( SNAP_ID ,INST_ID, FILE_NAME,  block_reads, block_writes,total_io, write_time, read_time)
SELECT l_SNAP_ID,l_INST_ID,b.file_name,f.phyblkrd,f.phyblkwrt,f.phyblkrd + f.phyblkwrt,f.writetim,f.readtim
FROM   v$filestat f, dba_data_files b
WHERE  f.file# = b.file_id
ORDER BY f.phyblkrd + f.phyblkwrt DESC;


INSERT INTO WAIT_CLASS_PARMS (SNAP_ID,INST_ID,WAIT_CLASS,TIME_WAITED)
SELECT l_SNAP_ID,l_INST_ID,wait_class, time_waited/100 
FROM v$system_wait_class
WHERE wait_class <> 'Idle'
UNION ALL
SELECT l_SNAP_ID,l_INST_ID,'CPU',sum(value)/1000000
FROM v$sys_time_model
WHERE stat_name IN ('DB CPU','background cpu time');


INSERT INTO TIME_MODEL_PARMS(SNAP_ID,INST_ID,STAT_NAME,VAL)
SELECT l_SNAP_ID,l_INST_ID,STAT_NAME,VALUE/1000000 
FROM V$SYS_TIME_MODEL 
WHERE STAT_ID IN (3649082374,2748282437,4157170894,2451517896,4157170894,4127043053,1431595225,2821698184,
1990024365,372226525,3138706091,268357648,1824284809,4125607023,2643905994,290749718,1311180441,2411117902,1159091985);


INSERT INTO SYSTEM_EVENT_FG_PARMS (SNAP_ID,INST_ID,EVENT,TOTAL_WAITS_FG,TIME_WAITED_FG)
select l_SNAP_ID,l_INST_ID,event,total_waits_fg,time_waited_fg / 100
from    v$system_event
where   wait_class != 'Idle'
and rownum<=25
order by time_waited_fg desc;


INSERT INTO SYSTEM_EVENT_BG_PARMS (SNAP_ID,INST_ID,EVENT,TOTAL_WAITS,TIME_WAITED)
select l_SNAP_ID,l_INST_ID,event,total_waits,time_waited / 100
from    v$system_event
where   wait_class != 'Idle'
and rownum<=25
order by time_waited desc;


INSERT INTO SQL_INFO_PARMS(SNAP_ID,INST_ID,SQL_ID,PARSE_CALLS,LOADS,INVALIDATIONS,ELAPSED_TIME, CPU_TIME, EXECUTIONS,APPLICATION_WAIT_TIME,
CONCURRENCY_WAIT_TIME, USER_IO_WAIT_TIME,PLSQL_EXEC_TIME, JAVA_EXEC_TIME, BUFFER_GETS, DISK_READS,DIRECT_WRITES,ROWS_PROCESSED,FETCHES ,SERIALIZABLE_ABORTS)
SELECT l_SNAP_ID,l_INST_ID, SQL_ID,PARSE_CALLS,LOADS,INVALIDATIONS, ELAPSED_TIME, CPU_TIME, EXECUTIONS,APPLICATION_WAIT_TIME,
CONCURRENCY_WAIT_TIME, USER_IO_WAIT_TIME,PLSQL_EXEC_TIME, JAVA_EXEC_TIME, BUFFER_GETS, DISK_READS,DIRECT_WRITES,ROWS_PROCESSED,FETCHES,SERIALIZABLE_ABORTS
FROM V$SQLAREA
WHERE EXECUTIONS > 0 
AND ROWNUM<=25
ORDER BY ELAPSED_TIME/EXECUTIONS DESC;


INSERT INTO LATCH_PARMS(SNAP_ID,INST_ID,GETS,MISSES)
SELECT l_SNAP_ID,l_INST_ID,Sum(gets),Sum(misses)
FROM v$latch; 


INSERT INTO SYSSTAT_PARMS(SNAP_ID,INST_ID,STAT_NAME,VAL)
SELECT l_SNAP_ID,l_INST_ID,name,VALUE 
FROM V$SYSSTAT 
WHERE name IN('sorts (memory)', 'sorts (disk)', 'session logical reads', 'physical reads direct', 'physical reads direct (lob)', 'physical reads');


INSERT INTO ROW_CACHE_PARMS(SNAP_ID,INST_ID,GETS,GETMISSES)
SELECT l_SNAP_ID,l_INST_ID,sum(gets),sum(getmisses) 
from v$rowcache;


INSERT INTO LIBRARY_CACHE_PARMS(SNAP_ID,INST_ID,PINS,RELOADS)
SELECT l_SNAP_ID,l_INST_ID,sum(pins),sum(RELOADS) 
from v$librarycache;


INSERT INTO SYS_PARMS(SNAP_ID,INST_ID,STAT_NAME,VAL)
SELECT l_SNAP_ID,l_INST_ID,'DB_TIME',sum(value)/1000000
FROM v$sys_time_model
WHERE stat_name IN ('DB time','background elapsed time');


INSERT INTO SESS_PARMS(SNAP_ID,INST_ID,SID_NUM,VAL,USERNAME,PROGRAM_NAME)
SELECT l_SNAP_ID,l_INST_ID,m.sid, sum(m.value)/1000000,s.username,s.program
FROM v$sess_time_model m
LEFT JOIN v$session s ON m.sid = s.sid
WHERE m.stat_name IN ('DB time','background elapsed time')
GROUP BY m.sid,s.USERNAME,s.PROGRAM
ORDER BY sum(m.value)/1000000 DESC;

INSERT INTO ROLLBACK_PARMS(SNAP_ID,INST_ID,WAITS,GETS)
SELECT l_SNAP_ID,l_INST_ID,SUM(WAITS),SUM(GETS)
FROM V$ROLLSTAT;


COMMIT;
END;
/


CREATE OR REPLACE PROCEDURE change_job_prc(job_name varchar2, param_name varchar2, val_new varchar2)
As
BEGIN
dbms_scheduler.disable( job_name);

DBMS_SCHEDULER.SET_ATTRIBUTE ( name => job_name,attribute => param_name, value => val_new);

dbms_scheduler.enable( job_name);
END;
/


CREATE OR REPLACE PROCEDURE delete_snapshots_prc(first_snap number, last_snap number)
As
BEGIN
DELETE FROM snapshot_parms WHERE snap_id BETWEEN first_snap AND last_snap;
COMMIT;
End;
/

-------------------------------------
-- job scheduler
--------------------------------------
BEGIN
dbms_scheduler.drop_job(job_name => 'INSERT_JOB');
END;
/        

BEGIN
dbms_scheduler.create_job (
   job_name           =>  'INSERT_JOB',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'INSERT_PRC',
   start_date         =>  SYSTIMESTAMP,
   repeat_interval    =>  'freq=HOURLY; interval=1;',
   enabled            =>  true); 
END;
/
